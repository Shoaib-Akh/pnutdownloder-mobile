apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.chaquo.python'

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.pnutdownloader"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        // ✅ Auto set versionCode and versionName
        versionCode getGitCommitCount()
        versionName getGitTag() ?: "1.0.0"

        versionCode getGitCommitCount()
        versionName getGitTag() ?: "1.0.0"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }

        python {
            version "3.9"
            pip {
                install "yt-dlp"
                install "requests"
                install "isodate"
                install "google-api-python-client"
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }

    namespace "com.pnutdownloader"
}

dependencies {
    implementation project(':react-native-fs')
    implementation("com.google.firebase:firebase-analytics")
    implementation(platform("com.google.firebase:firebase-bom:33.14.0"))
    implementation("com.facebook.react:react-android")
    implementation project(':react-native-vector-icons')
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

//
// ✅ Auto-versioning helpers using Git
//
def getGitCommitCount() {
    try {
        return Integer.parseInt('git rev-list --count HEAD'.execute().text.trim())
    } catch (Exception e) {
        println("⚠️ Could not get Git commit count, defaulting to 1")
        return 1
    }
}

def getGitTag() {
    try {
        return 'git describe --tags --abbrev=0'.execute().text.trim()
    } catch (Exception e) {
        println("⚠️ Could not get Git tag, defaulting to null")
        return null
    }
}
